version: '3.6'

networks:
  traefik-net:
    name: system_traefik-net
    driver: overlay
  agent-net:
    driver: overlay
    attachable: true

volumes:
  portainer-data:

services:
  traefik:
    image: traefik:latest
    command:
      - "--api"
      #- "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:http Address::80"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=localhost"
      - "--docker.watch"
      - "--logLevel=INFO"
    networks:
      - traefik-net
    ports:
      - 80:80
      - 443:443
      - 9008:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
      #- /dev/null:/acme.json
    deploy:
      mode: global
      placement:
        constraints: 
          - 'node.role == manager'
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "false"       # Not working a the moment issue: traefik/3282
        traefik.port: "8080"
        traefik.backend: "traefik"
        traefik.frontend.rule: "PathPrefixStrip:/proxy"
        traefik.docker.network: "system_traefik-net"

  agent:
    image: portainer/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent-net
    deploy:
      mode: global
      placement:
        constraints: 
        - 'node.platform.os == linux'

  portainer:
    image: portainer/portainer:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify --no-auth --templates https://raw.githubusercontent.com/cgHome/cflat-server/master/system/portainer-templates.json
    volumes:
      - portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - agent-net
      - traefik-net
    depends_on:
      - agent
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - 'node.role == manager'
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "false" 
        traefik.port: "9000"
        traefik.backend: "docker"
        traefik.frontend.rule: "PathPrefixStrip:/docker-ui"
        traefik.docker.network: "system_traefik-net"
